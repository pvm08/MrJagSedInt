from pandas import read_csv
from keras.models import Sequential
from keras.layers import Dense
from keras.wrappers.scikit_learn import KerasRegressor
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import KFold
from sklearn.preprocessing import StandardScaler
from sklearn.pipeline import Pipeline
import numpy as np
import tensorflow as tf
import matplotlib.pyplot as plt
dataframe = read_csv("/content/sample_data/state_level_daily.csv", delim_whitespace=False, header=0)
SS=input()
dataframe=dataframe.loc[dataframe['State'] == SS]
dataframe=dataframe.sort_values(by='Confirmed')
dataset = dataframe.values
#dataframe
A=(int)(len(dataframe)/2)
X_train = dataset[0:A,3]
y_train = dataset[0:A,5]
X_test=dataset[A:,3]
y_test=dataset[A:,5]
X_train=X_train.reshape(-1,1)
X_test=X_test.reshape(-1,1)
X_train = tf.convert_to_tensor(X_train, dtype=tf.int64) 
y_train = tf.convert_to_tensor(y_train, dtype=tf.int64) 
X_test = tf.convert_to_tensor(X_test, dtype=tf.int64) 
y_test = tf.convert_to_tensor(y_test, dtype=tf.int64) 
#plt.scatter(X_test,y_test)     #Confirmed vs Deceased
#plt.scatter(dataset[A:,1],X_test)    #Confirmed vs time
#plt.scatter(dataset[A:,1],y_test)    #Deceased vs time
model = Sequential()
model.add(Dense(60, input_dim=1, kernel_initializer='normal', activation='relu'))
model.add(Dense(30, kernel_initializer='normal', activation='relu'))
model.add(Dense(15, kernel_initializer='normal', activation='relu'))
model.add(Dense(7, kernel_initializer='normal', activation='relu'))
model.add(Dense(3, kernel_initializer='normal', activation='relu'))
model.add(Dense(1, kernel_initializer='normal', activation='relu'))
model.compile(loss='mean_squared_error', optimizer='adam')
model.fit(X_train, y_train,  epochs=500, batch_size=300)
y_test=model.predict(X_test)
y_test=y_test.mean(axis=1)
#plt.scatter(X_test,y_test)     #Confirmed vs Deceased
#plt.scatter(dataset[A:,1],X_test)    #Confirmed vs time
#plt.scatter(dataset[A:,1],y_test)    #Deceased vs time
